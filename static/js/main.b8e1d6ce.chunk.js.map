{"version":3,"sources":["Store/reducers.js","Store/index.js","Store/actions.js","Loader/Loader.jsx","Loader/index.js","Api/Api.js","HomePage/index.js","HomePage/HomePage.jsx","LoginPage/LoginPage.jsx","LoginPage/index.js","RegisterPage/RegisterPage.jsx","RegisterPage/index.js","App/index.js","App/App.jsx","index.jsx"],"names":["combineReducers","isLoggedIn","state","action","type","user","payload","store","createStore","reducers","applyMiddleware","thunk","actionSignIn","actionCreatorsSignIn","createThunk","data","fn","dispatch","createThunkSignIn","actionCreatorsSignOut","actionSignOut","Loader","this","props","JSON","parse","localStorage","getItem","children","React","Component","connect","API_URLS","signUp","a","axios","post","signIn","createLocalStorage","usr","setItem","stringify","HomePage","className","username","onClick","clear","to","validSchema","Yup","password","matches","required","email","submitForm","values","setSubmitting","resetForm","setFieldError","response","status","LoginPage","xs","md","xl","initialValues","validationSchema","onSubmit","handleSubmit","htmlFor","name","component","isSubmitting","min","errors","RegisterPage","App","Store","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8e1d6ce.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst isLoggedIn = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN': {\r\n      return true;\r\n    }\r\n    case 'LOGOUT': {\r\n      return false;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst user = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN': {\r\n      return { ...action.payload.user };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  isLoggedIn,\r\n  user,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","export const actionSignOut = () => ({\r\n  type: 'LOGOUT',\r\n});\r\n\r\nexport const actionSignIn = user => ({\r\n  type: 'LOGIN',\r\n  payload: { user },\r\n});\r\n\r\nexport const createThunk = (data, fn) => dispatch => {\r\n  return dispatch(fn(data));\r\n};\r\n\r\nexport const createThunkSignIn = data => dispatch => {\r\n  return dispatch(actionSignIn(data));\r\n};\r\n\r\nexport const actionCreatorsSignIn = {\r\n  actionSignIn,\r\n  createThunk,\r\n  createThunkSignIn,\r\n};\r\n\r\nexport const actionCreatorsSignOut = {\r\n  actionSignOut,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { actionCreatorsSignIn } from '../Store/actions';\r\n\r\nclass Loader extends React.Component {\r\n  componentDidMount() {\r\n    const { actionSignIn } = this.props;\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      actionSignIn(user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.props.children}</div>\r\n  }\r\n};\r\n\r\nexport default connect(()=>({}), actionCreatorsSignIn)(Loader);\r\n\r\n\r\n","import Loader from './Loader';\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\n\r\nconst API_URLS = {\r\n  BASE_URl: 'https://conduit.productionready.io/api/',\r\n  LOGIN_USER: 'users/login',\r\n  REGISTER_USER: 'users',\r\n};\r\n\r\nexport const signUp = async user => {\r\n  return axios.post(`${API_URLS.BASE_URl}${API_URLS.REGISTER_USER}`, user);\r\n};\r\n\r\nexport const signIn = async user => {\r\n  return axios.post(`${API_URLS.BASE_URl}${API_URLS.LOGIN_USER}`, user);\r\n};\r\n\r\nexport const createLocalStorage = usr => {\r\n  localStorage.setItem('user', JSON.stringify(usr));\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n","import HomePage from './HomePage';\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { actionCreatorsSignOut } from '../Store/actions';\r\nimport { clearLocalStorage } from '../Api/Api';\r\n\r\nconst HomePage = props => {\r\n  const { isLoggedIn, actionSignOut, user } = props;\r\n  if (isLoggedIn) {\r\n    return (\r\n      <div className=\"header\">\r\n        This is Homepage\r\n        <div className=\"header_btn\">\r\n          <span>{user.username}</span>\r\n          <button  \r\n            onClick={()=> {\r\n              clearLocalStorage();\r\n              actionSignOut()\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn-primary\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n  return (\r\n   <Redirect to=\"/blog/login\" />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n    user: state.user,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsSignOut)(HomePage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col } from 'antd';\r\n\r\nimport { signIn, createLocalStorage } from '../Api/Api';\r\nimport { actionCreatorsSignIn } from '../Store/actions';\r\n\r\n\r\nconst validSchema = Yup.object({\r\n  password: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Password have only latin letters and digits\")\r\n    .required(\"You must enter password\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"You must enter email\"),\r\n});\r\n\r\nconst submitForm = (createThunk, actionSignIn) => async (values, { setSubmitting, resetForm, setFieldError }) => {\r\n  try {\r\n    const response = await signIn({user: values});\r\n    if (response.status === 200) {\r\n      resetForm();\r\n      setSubmitting(false);\r\n      const { user } = response.data;\r\n      createThunk(user, actionSignIn);\r\n      createLocalStorage(user);\r\n    }\r\n  } catch (error) {\r\n    setFieldError('email', 'Check email');\r\n    setFieldError('password', 'Check password');\r\n  }\r\n}\r\n\r\nconst LoginPage = (props) =>  {\r\n  const { isLoggedIn, createThunk, actionSignIn } = props;\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/blog\" />\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"formWrapper\">\r\n      <h2 className=\"formHeader\">Sing in to Blog</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm(createThunk, actionSignIn)}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"email\"><span className=\"labelForm\">Email</span>\r\n              <Field type=\"email\" name=\"email\" className=\"inputForm\" />\r\n            </label>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"errorForm\"/>\r\n\r\n            <label htmlFor=\"password\"><span className=\"labelForm\">Password</span>\r\n              <Field type=\"password\" name=\"password\" className=\"inputForm\" />\r\n            </label>\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"errorForm\"/>\r\n\r\n            {props.isSubmitting ? (\r\n                <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Sign in\r\n            </button>\r\n              )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className=\"or\">OR</div>\r\n      <Link to=\"signup\">\r\n        Create new Account\r\n      </Link>\r\n    </Col>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsSignIn)(LoginPage);\r\n","import LoginPage from './LoginPage';\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col } from 'antd';\r\n\r\nimport { signUp, createLocalStorage } from '../Api/Api';\r\nimport { actionCreatorsSignIn  } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  username: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Name have only latin letters and digits\")\r\n    .required(\"You must enter Name\"),\r\n  password: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Password have only latin letters and digits\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n    .required(\"You must enter password\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"You must enter email\"),\r\n});\r\n\r\nconst submitForm = (createThunk, actionSignIn) => async (values, { setSubmitting, resetForm, setFieldError }) => {\r\n  try {\r\n    const response = await signUp({user: values});\r\n    if (response.status === 200) {\r\n      resetForm();\r\n      setSubmitting(false);\r\n      const { user } = response.data;\r\n      createThunk(user, actionSignIn);\r\n      createLocalStorage(user);\r\n    }\r\n  } catch (error) {\r\n      const { email, password, username } = error.response.data.errors;\r\n      setFieldError('username', username);\r\n      setFieldError('email', email);\r\n      setFieldError('password', password);\r\n  }\r\n}\r\n\r\nconst RegisterPage = (props) => {\r\n  const { isLoggedIn, createThunk, actionSignIn } = props;\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/blog\" />\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"formWrapper\">\r\n      <h2 className=\"formHeader\">Create new accuant</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '', username: '' }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm(createThunk, actionSignIn)}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"username\"><span className=\"labelForm\">Name</span>\r\n              <Field type=\"text\" name=\"username\" className=\"inputForm\"/>\r\n            </label>\r\n            <ErrorMessage name=\"username\" component=\"div\" className=\"errorForm\" />\r\n\r\n            <label htmlFor=\"email\"><span className=\"labelForm\">Email</span>\r\n              <Field type=\"email\" name=\"email\" className=\"inputForm\"/>\r\n            </label>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"errorForm\" />\r\n\r\n            <label htmlFor=\"password\"><span className=\"labelForm\">Password</span>\r\n              <Field type=\"password\" name=\"password\" className=\"inputForm\" />\r\n            </label>\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"errorForm\" />\r\n\r\n            {props.isSubmitting ? (\r\n              <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Sign Up\r\n            </button>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className=\"or\">OR</div>\r\n      <Link to=\"login\">Sign in</Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps,  actionCreatorsSignIn)(RegisterPage);\r\n","import RegisterPage from './RegisterPage';\r\n\r\nexport default RegisterPage;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Store from '../Store';\r\n\r\nimport Loader from '../Loader';\r\nimport HomePage from '../HomePage';\r\nimport LoginPage from '../LoginPage';\r\nimport RegisterPage from '../RegisterPage';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={Store}>\r\n      <BrowserRouter>\r\n        <Loader>\r\n          <Route path=\"/blog\" component={HomePage} exact/>\r\n          <Route path=\"/blog/login\" component={LoginPage} />\r\n          <Route path=\"/blog/signup\" component={RegisterPage} />\r\n        </Loader>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}