{"version":3,"sources":["App/ProtectedRoute.jsx","Api/Api.js","Store/actions.js","Loader/Loader.jsx","Loader/index.js","HomePage/index.js","HomePage/HomePage.jsx","LoginPage/LoginPage.jsx","LoginPage/index.js","RegisterPage/RegisterPage.jsx","RegisterPage/index.js","App/index.js","App/App.jsx","Store/reducers.js","Store/index.js","index.jsx"],"names":["ProtectedRoute","Component","component","addresToRedirect","isRoutingAllowed","show","rest","render","props","to","axiosInstance","axios","create","baseURL","API_URLS","signUp","user","a","post","signIn","addUserToLocalStorage","usr","localStorage","setItem","JSON","stringify","isAuthorized","isLoggedIn","canActivate","changeStateToSignIn","createAction","changeStateToSignOut","actionCreatorsSignIn","thunkSignIn","values","dispatch","response","data","errors","thunkSignUp","actionCreatorsSignOut","Loader","this","parse","getItem","e","console","log","children","React","connect","HomePage","state","className","username","onClick","clear","type","validSchema","Yup","password","matches","required","email","LoginPage","submitForm","setSubmitting","setFieldError","xs","md","xl","initialValues","validationSchema","onSubmit","handleSubmit","htmlFor","name","isSubmitting","min","RegisterPage","App","path","exact","handleActions","payload","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","Store","document","getElementById"],"mappings":"yOAuBeA,EApBQ,SAAC,GAMjB,IALMC,EAKP,EALJC,UACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,KACGC,EACC,0EACJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GACN,OAAIJ,EAAiBC,GACZ,kBAACJ,EAAcO,GAEjB,kBAAC,IAAD,CAAUC,GAAIN,S,iCCfvBO,E,OAAgBC,EAAMC,OAAO,CACjCC,QAAS,4CAGLC,EACQ,cADRA,EAEW,QAGJC,EAAM,uCAAG,WAAMC,GAAN,SAAAC,EAAA,+EACbP,EAAcQ,KAAd,UAAsBJ,GAA0BE,IADnC,2CAAH,sDAING,EAAM,uCAAG,WAAMH,GAAN,SAAAC,EAAA,+EACbP,EAAcQ,KAAd,UAAsBJ,GAAuBE,IADhC,2CAAH,sDAINI,EAAwB,SAAAC,GACnCC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,KAOxCK,EAAe,SAAAC,GACnB,QAAIA,GAMOC,EAAc,SAAAD,GAAU,OAAI,SAAAtB,GACvC,QAAIqB,EAAaC,KAAgBtB,OAG5BqB,EAAaC,IAAetB,K,sDCnCtBwB,EAAsBC,YAAa,WACnCC,EAAuBD,YAAa,YA0BpCE,EAAuB,CAClCH,sBACAI,YA1ByB,SAAAC,GAAM,8CAAI,WAAMC,GAAN,iBAAAlB,EAAA,+EAEVE,EAAO,CAAEH,KAAMkB,IAFL,OAE3BE,EAF2B,OAGzBpB,EAASoB,EAASC,KAAlBrB,KACRmB,EAASN,EAAoBb,IAC7BI,EAAsBJ,GALW,sDAOhB,KAAMoB,SAASC,KAAKC,OAPJ,yDAAJ,uDA2B/BC,YAfyB,SAAAL,GAAM,8CAAI,WAAMC,GAAN,iBAAAlB,EAAA,+EAEVF,EAAO,CAAEC,KAAMkB,IAFL,OAE3BE,EAF2B,OAGzBpB,EAASoB,EAASC,KAAlBrB,KACRmB,EAASN,EAAoBb,IAC7BI,EAAsBJ,GALW,sDAOhB,KAAMoB,SAASC,KAAKC,OAPJ,yDAAJ,wDAkBpBE,EAAwB,CACnCT,wBC/BIU,E,4LACiB,IACXZ,EAAwBa,KAAKlC,MAA7BqB,oBACP,IACC,IAAMb,EAAOQ,KAAKmB,MAAMrB,aAAasB,QAAQ,SACzC5B,GACFa,EAAoBb,GAEtB,MAAO6B,GACPC,QAAQC,IAAI,gC,+BAKd,OAAO,6BAAML,KAAKlC,MAAMwC,c,GAdPC,IAAMhD,WCJZwC,ED0BAS,aAAQ,iBAAK,KAAKlB,EAAlBkB,CAAwCT,GE1BxCU,ECsCAD,aAXS,SAACE,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,QASwBwB,EAAzBU,EAjCE,SAAA1C,GAAU,IACjBuB,EAA+BvB,EAA/BuB,qBAAsBf,EAASR,EAATQ,KAC5B,OACE,yBAAKqC,UAAU,UAAf,mBAEE,yBAAKA,UAAU,cACb,8BAAOrC,EAAKsC,UACZ,4BACEC,QAAS,WLSnBjC,aAAakC,QKPDzB,KAEF0B,KAAK,SACLJ,UAAU,eANZ,a,iCCJJK,EAAcC,IAAW,CAC7BC,SAAUD,MACPE,QAAQ,oBAAqB,+CAC7BC,SAAS,2BACZC,MAAOJ,MACJI,MAAM,yBACND,SAAS,0BCdCE,EDiFAd,aAVS,SAACE,GACvB,MAAO,CACLzB,WAAYyB,EAAMzB,cAQkBK,EAAzBkB,EAhEG,SAAC1C,GAAY,IACrByB,EAAgBzB,EAAhByB,YAEFgC,EAAU,uCAAG,WAAO/B,EAAP,oBAAAjB,EAAA,6DAAiBiD,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,cAAhC,kBAETlC,EAAYC,GAFH,uDAKfiC,EAAc,QAAS,eACvBA,EAAc,WAAY,kBANX,yBASfD,GAAc,GATC,4EAAH,wDAahB,OACE,kBAAC,IAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGjB,UAAU,gBACpC,wBAAIA,UAAU,eAAd,mBACA,kBAAC,IAAD,CACEkB,cAAe,CAAER,MAAO,GAAIH,SAAU,IACtCY,iBAAkBd,EAClBe,SAAUR,IAET,SAAAzD,GAAK,OACJ,kBAAC,IAAD,CAAMiE,SAAUjE,EAAMkE,cACpB,2BAAOC,QAAQ,SAAQ,0BAAMtB,UAAU,cAAhB,SACrB,kBAAC,IAAD,CAAOI,KAAK,QAAQmB,KAAK,QAAQvB,UAAU,gBAE7C,kBAAC,IAAD,CAAcuB,KAAK,QAAQ1E,UAAU,MAAMmD,UAAU,eAErD,2BAAOsB,QAAQ,YAAW,0BAAMtB,UAAU,cAAhB,YACxB,kBAAC,IAAD,CAAOI,KAAK,WAAWmB,KAAK,WAAWvB,UAAU,gBAEnD,kBAAC,IAAD,CAAcuB,KAAK,WAAW1E,UAAU,MAAMmD,UAAU,eAEvD7C,EAAMqE,aACH,kBAAC,IAAD,MAEA,4BAAQpB,KAAK,SAASJ,UAAU,eAAhC,eAOV,yBAAKA,UAAU,MAAf,MACA,kBAAC,IAAD,CAAM5C,GAAG,UAAT,0BExDAiD,EAAcC,IAAW,CAC7BL,SAAUK,MACPE,QAAQ,oBAAqB,2CAC7BC,SAAS,uBACZF,SAAUD,MACPE,QAAQ,oBAAqB,+CAC7BiB,IAAI,EAAG,sDACPhB,SAAS,2BACZC,MAAOJ,MACJI,MAAM,yBACND,SAAS,0BClBCiB,ED0FA7B,aAVS,SAACE,GACvB,MAAO,CACLzB,WAAYyB,EAAMzB,cAQmBK,EAA1BkB,EArEM,SAAC1C,GAAW,IACvB+B,EAAgB/B,EAAhB+B,YAEF0B,EAAU,uCAAG,WAAO/B,EAAP,0BAAAjB,EAAA,6DAAiBiD,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,cAAhC,kBAET5B,EAAYL,GAFH,uDAKP6B,EALO,KAKPA,MAAOH,EALA,KAKAA,SAAUN,EALV,KAKUA,SACzBa,EAAc,WAAYb,GAC1Ba,EAAc,QAASJ,GACvBI,EAAc,WAAYP,GARX,yBAWfM,GAAc,GAXC,4EAAH,wDAehB,OACE,kBAAC,IAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGjB,UAAU,gBACpC,wBAAIA,UAAU,eAAd,sBACA,kBAAC,IAAD,CACEkB,cAAe,CAAER,MAAO,GAAIH,SAAU,GAAIN,SAAU,IACpDkB,iBAAkBd,EAClBe,SAAUR,IAET,SAAAzD,GAAK,OACJ,kBAAC,IAAD,CAAMiE,SAAUjE,EAAMkE,cACpB,2BAAOC,QAAQ,YAAW,0BAAMtB,UAAU,cAAhB,QACxB,kBAAC,IAAD,CAAOI,KAAK,OAAOmB,KAAK,WAAWvB,UAAU,gBAE/C,kBAAC,IAAD,CAAcuB,KAAK,WAAW1E,UAAU,MAAMmD,UAAU,eAExD,2BAAOsB,QAAQ,SAAQ,0BAAMtB,UAAU,cAAhB,SACrB,kBAAC,IAAD,CAAOI,KAAK,QAAQmB,KAAK,QAAQvB,UAAU,gBAE7C,kBAAC,IAAD,CAAcuB,KAAK,QAAQ1E,UAAU,MAAMmD,UAAU,eAErD,2BAAOsB,QAAQ,YAAW,0BAAMtB,UAAU,cAAhB,YACxB,kBAAC,IAAD,CAAOI,KAAK,WAAWmB,KAAK,WAAWvB,UAAU,gBAEnD,kBAAC,IAAD,CAAcuB,KAAK,WAAW1E,UAAU,MAAMmD,UAAU,eAEvD7C,EAAMqE,aACL,kBAAC,IAAD,MAEE,4BAAQpB,KAAK,SAASJ,UAAU,eAAhC,eAOV,yBAAKA,UAAU,MAAf,MACA,kBAAC,IAAD,CAAM5C,GAAG,SAAT,eE3ESuE,G,cCgCA9B,aANS,SAACE,GACvB,MAAO,CACLzB,WAAYyB,EAAMzB,cAIPuB,EAnBH,SAAC1C,GAAW,IACdmB,EAAenB,EAAfmB,WACR,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAgBsD,KAAK,QAAQ/E,UAAWiD,EAAU+B,OAAK,EAAC/E,iBAAkB,cAAeC,iBAAmBwB,EAAYD,GAActB,MAAI,IAC1I,kBAAC,EAAD,CAAgB4E,KAAK,cAAc/E,UAAW8D,EAAW7D,iBAAkB,QAAUC,iBAAmBwB,EAAYD,KACpH,kBAAC,EAAD,CAAgBsD,KAAK,eAAe/E,UAAW6E,EAAc5E,iBAAkB,QAAUC,iBAAmBwB,EAAYD,W,kCClB1HA,EAAawD,aAAa,mBAE3BtD,GAAsB,WACrB,OAAO,KAHmB,cAK3BE,GAAuB,WACtB,OAAO,KANmB,IAS9B,GAGIf,EAAOmE,YAAc,eAEtBtD,GAAsB,SAACuB,EAAD,GACrB,OAD6C,EAAdgC,WAInC,IAGaC,cAAgB,CAC7B1D,aACAX,SCrBasE,GAFDC,YAAYC,EAAUC,YAAgBC,MCEpDC,IAASpF,OAAO,kBAAC,IAAD,CAAU+E,MAAOM,IAAO,kBAAC,EAAD,OAAoBC,SAASC,eAAe,W","file":"static/js/main.0e5d89e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({\r\n  component: Component,\r\n  addresToRedirect,\r\n  isRoutingAllowed,\r\n  show,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isRoutingAllowed(show)) {\r\n          return <Component {...props} />\r\n        } \r\n        return <Redirect to={addresToRedirect} />\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://conduit.productionready.io/api/',\r\n});\r\n\r\nconst API_URLS = {\r\n  LOGIN_USER: 'users/login',\r\n  REGISTER_USER: 'users',\r\n};\r\n\r\nexport const signUp = async user => {\r\n  return axiosInstance.post(`${API_URLS.REGISTER_USER}`, user);\r\n};\r\n\r\nexport const signIn = async user => {\r\n  return axiosInstance.post(`${API_URLS.LOGIN_USER}`, user);\r\n};\r\n\r\nexport const addUserToLocalStorage = usr => {\r\n  localStorage.setItem('user', JSON.stringify(usr));\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nconst isAuthorized = isLoggedIn => {\r\n  if (isLoggedIn) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const canActivate = isLoggedIn => show => {\r\n  if (isAuthorized(isLoggedIn) && !show) {\r\n    return false;\r\n  }\r\n  if (!isAuthorized(isLoggedIn) && show) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import { createAction } from 'redux-actions';\r\nimport { signIn, signUp, addUserToLocalStorage } from '../Api/Api';\r\n\r\nexport const changeStateToSignIn = createAction('SIGN_IN');\r\nexport const changeStateToSignOut = createAction('SIGN_OUT');\r\n\r\nexport const thunkSignIn = values => async dispatch => {\r\n  try {\r\n    const response = await signIn({ user: values });\r\n    const { user } = response.data;\r\n    dispatch(changeStateToSignIn(user));\r\n    addUserToLocalStorage(user);\r\n  } catch (error) {\r\n    const newError = error.response.data.errors;\r\n    throw newError; // пробрасываем ошибку дальше для UI\r\n  }\r\n};\r\n\r\nexport const thunkSignUp = values => async dispatch => {\r\n  try {\r\n    const response = await signUp({ user: values });\r\n    const { user } = response.data;\r\n    dispatch(changeStateToSignIn(user));\r\n    addUserToLocalStorage(user);\r\n  } catch (error) {\r\n    const newError = error.response.data.errors;\r\n    throw newError; // пробрасываем ошибку дальше для UI\r\n  }\r\n};\r\n\r\nexport const actionCreatorsSignIn = {\r\n  changeStateToSignIn,\r\n  thunkSignIn,\r\n  thunkSignUp,\r\n};\r\n\r\nexport const actionCreatorsSignOut = {\r\n  changeStateToSignOut,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignIn } from '../Store/actions';\r\n\r\nclass Loader extends React.Component {\r\n  componentDidMount() {\r\n    const { changeStateToSignIn } = this.props;\r\n     try {//for JSON.parse\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      if (user) {\r\n        changeStateToSignIn(user);\r\n      }\r\n    } catch (e) {\r\n      console.log('Can not read localStorage');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.props.children}</div>\r\n  }\r\n};\r\n\r\nLoader.propTypes = {\r\n  changeStateToSignIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(()=>({}), actionCreatorsSignIn)(Loader);\r\n\r\n\r\n","import Loader from './Loader';\n\nexport default Loader;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignOut } from '../Store/actions';\r\nimport { clearLocalStorage } from '../Api/Api';\r\n\r\nconst HomePage = props => {\r\n  const { changeStateToSignOut, user } = props;\r\n    return (\r\n      <div className=\"header\">\r\n        This is Homepage\r\n        <div className=\"header_btn\">\r\n          <span>{user.username}</span>\r\n          <button  \r\n            onClick={()=> {\r\n              clearLocalStorage();\r\n              changeStateToSignOut();\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn-primary\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  }\r\n};\r\n\r\nHomePage.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  changeStateToSignOut: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsSignOut)(HomePage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignIn } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  password: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Password have only latin letters and digits\")\r\n    .required(\"You must enter password\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"You must enter email\"),\r\n});\r\n\r\nconst LoginPage = (props) =>  {\r\n  const { thunkSignIn } = props;\r\n\r\n  const submitForm = async (values, { setSubmitting, setFieldError }) => {\r\n    try {\r\n      await thunkSignIn(values);\r\n    }\r\n    catch (error) {\r\n      setFieldError('email', 'Check email');\r\n      setFieldError('password', 'Check password');\r\n    }\r\n    finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"form-wrapper\">\r\n      <h2 className=\"form-header\">Sing in to Blog</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"email\"><span className=\"form-label\">Email</span>\r\n              <Field type=\"email\" name=\"email\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"form-error\" />\r\n  \r\n            <label htmlFor=\"password\"><span className=\"form-label\">Password</span>\r\n              <Field type=\"password\" name=\"password\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"form-error\"/>\r\n\r\n            {props.isSubmitting ? (\r\n                <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Sign in\r\n            </button>\r\n              )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className=\"or\">OR</div>\r\n      <Link to=\"signup\">\r\n        Create new Account\r\n      </Link>\r\n    </Col>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nLoginPage.propTypes = {\r\n  thunkSignIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsSignIn)(LoginPage);\r\n","import LoginPage from './LoginPage';\n\nexport default LoginPage;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignIn  } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  username: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Name have only latin letters and digits\")\r\n    .required(\"You must enter Name\"),\r\n  password: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Password have only latin letters and digits\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n    .required(\"You must enter password\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"You must enter email\"),\r\n});\r\n\r\nconst RegisterPage = (props) => {\r\n  const { thunkSignUp } = props;\r\n\r\n  const submitForm = async (values, { setSubmitting, setFieldError }) => {\r\n    try {\r\n      await thunkSignUp(values);\r\n    }\r\n    catch (error) {\r\n      const { email, password, username } = error;\r\n      setFieldError('username', username);\r\n      setFieldError('email', email);\r\n      setFieldError('password', password);\r\n    }\r\n    finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"form-wrapper\">\r\n      <h2 className=\"form-header\">Create new accuant</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '', username: '' }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"username\"><span className=\"form-label\">Name</span>\r\n              <Field type=\"text\" name=\"username\" className=\"form-input\"/>\r\n            </label>\r\n            <ErrorMessage name=\"username\" component=\"div\" className=\"form-error\" />\r\n\r\n            <label htmlFor=\"email\"><span className=\"form-label\">Email</span>\r\n              <Field type=\"email\" name=\"email\" className=\"form-input\"/>\r\n            </label>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"form-error\" />\r\n\r\n            <label htmlFor=\"password\"><span className=\"form-label\">Password</span>\r\n              <Field type=\"password\" name=\"password\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"form-error\" />\r\n\r\n            {props.isSubmitting ? (\r\n              <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Sign Up\r\n            </button>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className=\"or\">OR</div>\r\n      <Link to=\"login\">Sign in</Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nRegisterPage.propTypes = {\r\n  thunkSignUp: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps,  actionCreatorsSignIn)(RegisterPage);\r\n","import RegisterPage from './RegisterPage';\n\nexport default RegisterPage;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ProtectedRoute from './ProtectedRoute'; \r\nimport { canActivate } from '../Api/Api';\r\n\r\nimport Loader from '../Loader';\r\nimport HomePage from '../HomePage';\r\nimport LoginPage from '../LoginPage';\r\nimport RegisterPage from '../RegisterPage';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\n\r\nconst App = (props) => {\r\n  const { isLoggedIn } = props;\r\n  return (\r\n    <BrowserRouter>\r\n      <Loader>\r\n        <ProtectedRoute path=\"/blog\" component={HomePage} exact addresToRedirect={'/blog/login'} isRoutingAllowed={ canActivate(isLoggedIn) } show/> \r\n        <ProtectedRoute path=\"/blog/login\" component={LoginPage} addresToRedirect={'/blog'}  isRoutingAllowed={ canActivate(isLoggedIn) }/>\r\n        <ProtectedRoute path=\"/blog/signup\" component={RegisterPage} addresToRedirect={'/blog'}  isRoutingAllowed={ canActivate(isLoggedIn) }/>\r\n      </Loader>\r\n    </BrowserRouter>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport { changeStateToSignIn, changeStateToSignOut } from './actions';\r\n\r\nconst isLoggedIn = handleActions(\r\n  {\r\n    [changeStateToSignIn]: () => {\r\n      return true;\r\n    },\r\n    [changeStateToSignOut]: () => {\r\n      return false;\r\n    },\r\n  },\r\n  false\r\n);\r\n\r\nconst user = handleActions(\r\n  {\r\n    [changeStateToSignIn]: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default combineReducers({\r\n  isLoggedIn,\r\n  user,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Store from './Store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}