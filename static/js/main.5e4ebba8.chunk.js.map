{"version":3,"sources":["ProtectedRoute/ProtectedRouteRederict.jsx","ProtectedRoute/functions.js","ProtectedRoute/ProtectedRoute.jsx","Api/Api.js","Store/actions.js","Loader/Loader.jsx","Loader/index.js","HomePage/HomePage.jsx","HomePage/HomePageNotAuth.jsx","LoginPage/LoginPage.jsx","LoginPage/index.js","RegisterPage/RegisterPage.jsx","RegisterPage/index.js","Articles/LiteArticle.jsx","Articles/ListArticles.jsx","Articles/FulLArticle.jsx","Articles/Buttons.jsx","Articles/AddArticle.jsx","Articles/EditArticle.jsx","App/index.js","App/App.jsx","Store/reducers.js","Store/index.js","index.jsx"],"names":["ProtectedRouteRederict","Component","component","addresToRedirect","isRoutingAllowed","rest","render","props","to","canActivate","isLoggedIn","reverse","ProtectedRoute","ComponentAuth","componentAuth","ComponentNotAuth","componentNotAuth","API_URLS","axiosInstance","axios","create","baseURL","tokenConfig","user","JSON","parse","localStorage","getItem","token","headers","Authorization","err","signUp","a","post","signIn","addUserToLocalStorage","usr","setItem","stringify","getArticlesList","offset","get","params","limit","LikeArticle","slug","UnLikeArticle","delete","getArticle","createArticle","data","updateArticle","put","changeStateToSignIn","createAction","changeStateToSignOut","addArticlesList","favoriteArticle","deleteFavoriteArticle","addArticle","actionCreatorsSignIn","thunkSignIn","values","dispatch","response","errors","thunkSignUp","actionCreatorsSignOut","actionCreatorsArticlesList","thunkGetArticlesList","articles","actionCreatorsArticle","thunkGetArticle","article","thunkFavoriteArticle","thunkDeleteFavoriteActicle","thunkCreateArticle","tagList","split","thunkUpdateArticle","Loader","this","e","console","log","children","React","connect","state","className","username","onClick","clear","type","HomePageNotAuth","evt","stopPropagation","validSchema","Yup","password","matches","required","email","LoginPage","submitForm","setSubmitting","setFieldError","xs","md","xl","initialValues","validationSchema","onSubmit","handleSubmit","htmlFor","name","isSubmitting","min","RegisterPage","withRouter","toggleLike","favorited","title","author","createdAt","favoritesCount","style","history","push","cursor","LikeOutlined","join","formatDistance","Date","ListArticles","onChange","articlesList","map","el","key","total","defaultCurrent","FullArticle","closeButton","preventDefault","currentArticle","body","description","shape","match","AddArticleButton","resetForm","as","App","path","HomePage","exact","EditArticleButton","AddArticle","EditArticle","handleActions","payload","reduce","acc","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","Store","document","getElementById"],"mappings":"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","file":"static/js/main.5e4ebba8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProtectedRouteRederict = ({\r\n  component: Component,\r\n  addresToRedirect,\r\n  isRoutingAllowed,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isRoutingAllowed) {\r\n          return <Component {...props} />\r\n        } \r\n        return <Redirect to={addresToRedirect} />\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nProtectedRouteRederict.propTypes = {\r\n  component: PropTypes.elementType.isRequired,\r\n  isRoutingAllowed: PropTypes.bool.isRequired,\r\n  addresToRedirect: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProtectedRouteRederict;\r\n","const canActivate = (isLoggedIn, reverse) => {\r\n  if (reverse) {\r\n    if (isLoggedIn) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  if (isLoggedIn) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default canActivate;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProtectedRoute = ({\r\n  componentAuth: ComponentAuth,\r\n  componentNotAuth: ComponentNotAuth,\r\n  isRoutingAllowed,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isRoutingAllowed) {\r\n          return <ComponentAuth {...props} />\r\n        } \r\n        return <ComponentNotAuth {...props} />\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  componentAuth: PropTypes.elementType.isRequired,\r\n  componentNotAuth: PropTypes.elementType.isRequired,\r\n  isRoutingAllowed: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst API_URLS = {\r\n  LOGIN_USER: 'users/login',\r\n  REGISTER_USER: 'users',\r\n  ARTICLES: 'articles',\r\n};\r\n\r\nconst axiosConfig = {\r\n  baseURL: 'https://conduit.productionready.io/api/',\r\n};\r\n\r\nconst axiosInstance = axios.create(axiosConfig);\r\n\r\nconst tokenConfig = () => {\r\n  try {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      const { token } = user;\r\n      return { headers: { Authorization: `Token ${token}` } };\r\n    }\r\n  } catch (err) {\r\n    /* console.log('memo config can not read localStorage'); */\r\n  }\r\n  return {};\r\n};\r\n\r\nexport const signUp = async user => {\r\n  return axiosInstance.post(`${API_URLS.REGISTER_USER}`, user);\r\n};\r\n\r\nexport const signIn = async user => {\r\n  return axiosInstance.post(`${API_URLS.LOGIN_USER}`, user);\r\n};\r\n\r\nexport const addUserToLocalStorage = usr => {\r\n  localStorage.setItem('user', JSON.stringify(usr));\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nexport const getArticlesList = async (offset = 0) => {\r\n  return axiosInstance.get(`${API_URLS.ARTICLES}`, {\r\n    params: { limit: 10, offset },\r\n    ...tokenConfig(),\r\n  });\r\n};\r\n\r\nexport const LikeArticle = async slug => {\r\n  return axiosInstance.post(`${API_URLS.ARTICLES}/${slug}/favorite`, {}, tokenConfig());\r\n};\r\n\r\nexport const UnLikeArticle = async slug => {\r\n  return axiosInstance.delete(`${API_URLS.ARTICLES}/${slug}/favorite`, tokenConfig());\r\n};\r\n\r\nexport const getArticle = async slug => {\r\n  return axiosInstance.get(`${API_URLS.ARTICLES}/${slug}`, { ...tokenConfig() });\r\n};\r\n\r\nexport const createArticle = async data => {\r\n  return axiosInstance.post(`${API_URLS.ARTICLES}`, data, tokenConfig());\r\n};\r\n\r\nexport const updateArticle = async (slug, data) => {\r\n  return axiosInstance.put(`${API_URLS.ARTICLES}/${slug}`, data, tokenConfig());\r\n};\r\n","import { createAction } from 'redux-actions';\r\nimport {\r\n  signIn,\r\n  signUp,\r\n  addUserToLocalStorage,\r\n  getArticlesList,\r\n  LikeArticle,\r\n  UnLikeArticle,\r\n  getArticle,\r\n  createArticle,\r\n  updateArticle,\r\n} from '../Api/Api';\r\n\r\nexport const changeStateToSignIn = createAction('SIGN_IN');\r\nexport const changeStateToSignOut = createAction('SIGN_OUT');\r\nexport const addArticlesList = createAction('ADD_ARTICLES_LIST');\r\n\r\nexport const favoriteArticle = createAction('FAVORITE_ARTICLE');\r\nexport const deleteFavoriteArticle = createAction('DELETE_FAVORITE_ARTICLE');\r\n\r\nexport const addArticle = createAction('ADD_ARTICLE');\r\n\r\nexport const thunkSignIn = values => async dispatch => {\r\n  try {\r\n    const response = await signIn({ user: values });\r\n    const { user } = response.data;\r\n    dispatch(changeStateToSignIn(user));\r\n    addUserToLocalStorage(user);\r\n  } catch (error) {\r\n    const newError = error.response.data.errors;\r\n    throw newError; // пробрасываем ошибку дальше для UI\r\n  }\r\n};\r\n\r\nexport const thunkSignUp = values => async dispatch => {\r\n  try {\r\n    const response = await signUp({ user: values });\r\n    const { user } = response.data;\r\n    dispatch(changeStateToSignIn(user));\r\n    addUserToLocalStorage(user);\r\n  } catch (error) {\r\n    const newError = error.response.data.errors;\r\n    throw newError; // пробрасываем ошибку дальше для UI\r\n  }\r\n};\r\n\r\nexport const thunkGetArticlesList = offset => async dispatch => {\r\n  try {\r\n    const response = await getArticlesList(offset);\r\n    dispatch(addArticlesList(response.data.articles));\r\n  } catch (err) {\r\n    /* console.log('Error when add Articles List'); */\r\n  }\r\n};\r\n\r\nexport const thunkFavoriteArticle = slug => async dispatch => {\r\n  try {\r\n    const response = await LikeArticle(slug);\r\n    dispatch(favoriteArticle(response.data.article));\r\n  } catch (err) {\r\n    /* console.log('Error when favorite Article'); */\r\n  }\r\n};\r\n\r\nexport const thunkDeleteFavoriteActicle = slug => async dispatch => {\r\n  try {\r\n    const response = await UnLikeArticle(slug);\r\n    dispatch(deleteFavoriteArticle(response.data.article));\r\n  } catch (err) {\r\n    /* console.log('Error when delete favorite Article'); */\r\n  }\r\n};\r\n\r\nexport const thunkGetArticle = slug => async dispatch => {\r\n  try {\r\n    const response = await getArticle(slug);\r\n    dispatch(addArticle(response.data.article));\r\n  } catch (err) {\r\n    /* console.log('Error when get Article'); */\r\n  }\r\n};\r\n\r\nexport const thunkCreateArticle = values => async dispatch => {\r\n  try {\r\n    const { tagList } = values;\r\n    const response = await createArticle({ article: { ...values, tagList: tagList.split(' ') } });\r\n    dispatch(addArticle(response.data.article));\r\n  } catch (err) {\r\n    /* console.log('Error when create Article') */\r\n  }\r\n};\r\n\r\nexport const thunkUpdateArticle = (slug, values) => async dispatch => {\r\n  try {\r\n    const { tagList = [] } = values;\r\n    const response = await updateArticle(slug, {\r\n      article: { ...values, tagList: tagList.split(' ') },\r\n    });\r\n    dispatch(addArticle(response.data.article));\r\n  } catch (err) {\r\n    /* console.log('Error when update Article') */\r\n  }\r\n};\r\n\r\nexport const actionCreatorsSignIn = {\r\n  changeStateToSignIn,\r\n  thunkSignIn,\r\n  thunkSignUp,\r\n};\r\n\r\nexport const actionCreatorsSignOut = {\r\n  changeStateToSignOut,\r\n};\r\n\r\nexport const actionCreatorsArticlesList = {\r\n  thunkGetArticlesList,\r\n};\r\n\r\nexport const actionCreatorsArticle = {\r\n  addArticle,\r\n  thunkGetArticle,\r\n  favoriteArticle,\r\n  thunkFavoriteArticle,\r\n  thunkDeleteFavoriteActicle,\r\n  thunkCreateArticle,\r\n  thunkUpdateArticle,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignIn } from '../Store/actions';\r\n\r\nclass Loader extends React.Component {\r\n  componentDidMount() {\r\n    const { changeStateToSignIn } = this.props;\r\n     try {//for JSON.parse\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      if (user) {\r\n        changeStateToSignIn(user);\r\n      }\r\n    } catch (e) {\r\n      console.log('Can not read localStorage');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.props.children}</div>\r\n  }\r\n};\r\n\r\nLoader.propTypes = {\r\n  changeStateToSignIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(()=>({}), actionCreatorsSignIn)(Loader);\r\n\r\n\r\n","import Loader from './Loader';\n\nexport default Loader;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { actionCreatorsSignOut } from '../Store/actions';\r\nimport { clearLocalStorage } from '../Api/Api';\r\n\r\nconst HomePage = props => {\r\n  const { changeStateToSignOut, user } = props;\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <Link to={'/blog'} className=\"link-primary\">\r\n            <span>This is Homepage</span>\r\n          </Link>\r\n          <div className=\"header_btn\">\r\n            <span>{user.username}</span>\r\n            <button  \r\n              onClick={()=> {\r\n                clearLocalStorage();\r\n                changeStateToSignOut();\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn-primary\"\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  }\r\n};\r\n\r\nHomePage.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  changeStateToSignOut: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsSignOut)(HomePage);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomePageNotAuth = () => {\r\n  \r\n  const onClick = (evt) => {\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Link to={'/blog'} className=\"link-primary\">\r\n          <span>This is Homepage</span>\r\n        </Link>\r\n          <div className=\"header_btn\" onClick={onClick}>\r\n            <Link className=\"btn-primary\" to={'/blog/signin'}>SignIn</Link>\r\n            <Link className=\"btn-primary\" to={'/blog/signup'}>SignUp</Link>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePageNotAuth;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignIn } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  password: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Password have only latin letters and digits\")\r\n    .required(\"You must enter password\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"You must enter email\"),\r\n});\r\n\r\nconst LoginPage = (props) =>  {\r\n  const { thunkSignIn } = props;\r\n\r\n  const submitForm = async (values, { setSubmitting, setFieldError }) => {\r\n    try {\r\n      await thunkSignIn(values);\r\n    }\r\n    catch (error) {\r\n      setFieldError('email', 'Check email');\r\n      setFieldError('password', 'Check password');\r\n    }\r\n    finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"form-wrapper\">\r\n      <h2 className=\"form-header\">Sing in to Blog</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"email\"><span className=\"form-label\">Email</span>\r\n              <Field type=\"email\" name=\"email\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"form-error\" />\r\n  \r\n            <label htmlFor=\"password\"><span className=\"form-label\">Password</span>\r\n              <Field type=\"password\" name=\"password\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"form-error\"/>\r\n\r\n            {props.isSubmitting ? (\r\n                <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Sign in\r\n            </button>\r\n              )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className=\"or\">OR</div>\r\n      <Link to=\"signup\">\r\n        Create new Account\r\n      </Link>\r\n    </Col>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nLoginPage.propTypes = {\r\n  thunkSignIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsSignIn)(LoginPage);\r\n","import LoginPage from './LoginPage';\n\nexport default LoginPage;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsSignIn  } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  username: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Name have only latin letters and digits\")\r\n    .required(\"You must enter Name\"),\r\n  password: Yup.string()\r\n    .matches(/^[a-zA-Z0-9]{0,}$/, \"Password have only latin letters and digits\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n    .required(\"You must enter password\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"You must enter email\"),\r\n});\r\n\r\nconst RegisterPage = (props) => {\r\n  const { thunkSignUp } = props;\r\n\r\n  const submitForm = async (values, { setSubmitting, setFieldError }) => {\r\n    try {\r\n      await thunkSignUp(values);\r\n    }\r\n    catch (error) {\r\n      const { email, password, username } = error;\r\n      setFieldError('username', username);\r\n      setFieldError('email', email);\r\n      setFieldError('password', password);\r\n    }\r\n    finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"form-wrapper\">\r\n      <h2 className=\"form-header\">Create new accuant</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '', username: '' }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"username\"><span className=\"form-label\">Name</span>\r\n              <Field type=\"text\" name=\"username\" className=\"form-input\"/>\r\n            </label>\r\n            <ErrorMessage name=\"username\" component=\"div\" className=\"form-error\" />\r\n\r\n            <label htmlFor=\"email\"><span className=\"form-label\">Email</span>\r\n              <Field type=\"email\" name=\"email\" className=\"form-input\"/>\r\n            </label>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"form-error\" />\r\n\r\n            <label htmlFor=\"password\"><span className=\"form-label\">Password</span>\r\n              <Field type=\"password\" name=\"password\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"form-error\" />\r\n\r\n            {props.isSubmitting ? (\r\n              <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Sign Up\r\n            </button>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <div className=\"or\">OR</div>\r\n      <Link to=\"signin\">Sign in</Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nRegisterPage.propTypes = {\r\n  thunkSignUp: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps,  actionCreatorsSignIn)(RegisterPage);\r\n","import RegisterPage from './RegisterPage';\n\nexport default RegisterPage;\n","import React from 'react';\r\nimport { formatDistance } from 'date-fns';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsArticle } from '../Store/actions';\r\n\r\nconst LiteArticle = (props) => {\r\n  const toggleLike = async (evt) => {\r\n    evt.stopPropagation();/* останавливаем всплытие событий */\r\n    const { thunkFavoriteArticle, thunkDeleteFavoriteActicle, isLoggedIn } = props; /* фанки для лайка и анлайка*/ \r\n    const { slug } = props.article; /* получаем имя/идентификатор статьи */\r\n    if (!isLoggedIn) { // если не залогинены ничего не делаем\r\n      return;\r\n    }\r\n    if (favorited) { /* если мы лайкали */ \r\n      thunkDeleteFavoriteActicle(slug);\r\n    } else {\r\n      thunkFavoriteArticle(slug);\r\n    }\r\n  }\r\n\r\n  const openFullArticle = () => { \r\n    const { slug } = props.article; /* получаем адрес статьи */ \r\n    const { history, addArticle } = props; /* достаем объект хистори из WithRouter */ \r\n    addArticle(props.article); /* добавляем в стейт статью */ \r\n    history.push(`/blog/articles/${slug}`); /* пушим в урл название статьи */\r\n  }\r\n\r\n  const { title, author: { username }, createdAt, tagList, favoritesCount, favorited } = props.article;\r\n  const style = favorited ? 'favorite': '';\r\n  \r\n  return (\r\n    <article className=\"article-lite\" onClick={openFullArticle}>\r\n      <header className=\"article-lite_header\">\r\n        <h3>{username}</h3>\r\n        <div onClick={toggleLike} style={{cursor:'pointer'}}>\r\n          <LikeOutlined className={style} />\r\n          <span className={style}>{favoritesCount}</span>\r\n        </div>\r\n      </header>\r\n        <div className=\"article-lite_body\" >\r\n          <p className=\"article-lite_title\">{title}</p>\r\n          <p className=\"article-lite_tags\">{tagList.join(', ')}</p>\r\n          <p className=\"article-lite_date\">Created {formatDistance(new Date(), new Date(createdAt))} ago </p>\r\n        </div>\r\n    </article>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nLiteArticle.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  thunkFavoriteArticle:PropTypes.func.isRequired, \r\n  thunkDeleteFavoriteActicle:PropTypes.func.isRequired,\r\n  addArticle: PropTypes.func.isRequired,\r\n  article: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsArticle)(withRouter(LiteArticle));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Pagination } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsArticlesList } from '../Store/actions';\r\n\r\nimport LiteArticle from './LiteArticle';\r\n\r\nclass ListArticles extends React.Component {\r\n  componentDidMount() {\r\n    const { thunkGetArticlesList } = this.props;\r\n    thunkGetArticlesList();\r\n  }\r\n\r\n  onChange = evt => {\r\n    const { thunkGetArticlesList } = this.props;\r\n    thunkGetArticlesList(evt * 10 - 10);\r\n  }\r\n\r\n  render () {\r\n    const { articlesList } = this.props;\r\n    return (\r\n    <div>\r\n      <div className=\"articles-list\">\r\n        {articlesList.map(el => <LiteArticle article={el} key={el.slug} />) }\r\n      </div>\r\n      <Pagination total={500} onChange={this.onChange} defaultCurrent={1} className=\"pagination\"/>\r\n    </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n    articlesList: state.articlesList,\r\n  }\r\n};\r\n\r\nListArticles.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  articlesList: PropTypes.array.isRequired, \r\n  thunkGetArticlesList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsArticlesList)(ListArticles);\r\n","import React from 'react';\r\nimport { formatDistance } from 'date-fns';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsArticle } from '../Store/actions';\r\n\r\nclass FullArticle extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.currentArticle.title) { /* Если данные пришли от LiteArticle не запрашиваем по сети */\r\n      return ;\r\n    }\r\n    const { thunkGetArticle, slug } = this.props;\r\n    thunkGetArticle(slug);\r\n  }\r\n\r\n  closeButton = (evt) => {\r\n    evt.preventDefault();\r\n    const { history } = this.props;\r\n    history.push('/blog');\r\n  }\r\n\r\n  toggleLike = async (evt) => {\r\n    evt.stopPropagation(); /* останавливаем всплытие событий */\r\n    const { thunkFavoriteArticle, thunkDeleteFavoriteActicle, isLoggedIn } = this.props; /* фанки для лайка и анлайка*/ \r\n    const { slug, favorited } = this.props.currentArticle; /* получаем имя/идентификатор статьи */\r\n    if (!isLoggedIn) { // если не залогинены ничего не делаем\r\n      return;\r\n    }\r\n    if (favorited) { /* если мы лайкали */ \r\n      thunkDeleteFavoriteActicle(slug);\r\n    } else {\r\n      thunkFavoriteArticle(slug);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.currentArticle.title) { /* Если данные пока не получили ничего не показываем */\r\n      return null;\r\n    }\r\n    /* если данные есть ренденрим компонент */ \r\n    const { title, author: { username }, createdAt, tagList, favoritesCount, favorited, body, description } = this.props.currentArticle;\r\n    const style = favorited ? 'favorite': '';\r\n    \r\n    return (\r\n      <article className=\"article-full\" >\r\n      <Button className=\"btn-close\" shape=\"circle\" type=\"primary\" onClick={this.closeButton}>x</Button>\r\n      <header className=\"article-full_header\">\r\n        <h3>{username}</h3>\r\n        <div onClick={this.toggleLike} style={{cursor:'pointer'}}>\r\n          <LikeOutlined className={style} />\r\n          <span className={style}>{favoritesCount}</span>\r\n        </div>\r\n      </header>\r\n        <div className=\"article-full_body\" >\r\n          <p className=\"article-full_title\">{title}</p>\r\n          <p className=\"article-full_text\">{body}</p>\r\n          <p className=\"article-full_description\">{description}</p>\r\n          <p className=\"article-full_tags\">{tagList.join(', ')}</p>\r\n          <p className=\"article-full_date\">Created {formatDistance(new Date(), new Date(createdAt))} ago </p>\r\n        </div>\r\n    </article>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n    currentArticle: state.currentArticle,\r\n  }\r\n};\r\n\r\nFullArticle.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  currentArticle: PropTypes.object.isRequired,\r\n  thunkGetArticle: PropTypes.func.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  thunkFavoriteArticle: PropTypes.func.isRequired,\r\n  thunkDeleteFavoriteActicle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsArticle)(withRouter(FullArticle));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst EditArticleButton = (props) => {\r\n  if (!props.currentArticle.title) { /* Если данные пока не получили ничего не показываем */\r\n    return null;\r\n  }\r\n  const {slug} = props.match.params;\r\n  const { username } = props.user;\r\n  const { currentArticle } = props;\r\n\r\n  if (username === currentArticle.author.username) {\r\n    return (\r\n      <Link className=\"btn-addArticle\" to={`${slug}/edit`}>Edit</Link>\r\n    );\r\n  }\r\n    return null;\r\n}; \r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentArticle: state.currentArticle,\r\n    user: state.user,\r\n  }\r\n};\r\n\r\nEditArticleButton.propTypes = {\r\n  currentArticle:PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditArticleButton);\r\n\r\nexport const AddArticleButton = () => {\r\n  return (\r\n    <Link  className=\"btn-addArticle\" to=\"/blog/add\">Add article</Link>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col, Button } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsArticle } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"You must enter title\"),\r\n  description: Yup.string()\r\n    .required(\"You must enter description\"),\r\n  body: Yup.string()\r\n  .required(\"You must enter description\"),\r\n});\r\n\r\nconst AddArticle = (props) => {\r\n  const { thunkCreateArticle } = props;\r\n  \r\n  const closeButton = (evt) => {\r\n    evt.preventDefault();\r\n    const { history } = props;\r\n    history.push('/blog');\r\n  }\r\n\r\n  const submitForm = async (values, { setSubmitting, resetForm }) => {\r\n    try {\r\n      await thunkCreateArticle(values);\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n    finally {\r\n      setSubmitting(false);\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"form-wrapper\">\r\n       <Button className=\"btn-close\" shape=\"circle\" type=\"primary\" onClick={closeButton}>x</Button>\r\n      <h2 className=\"form-header\">Create New Article</h2>\r\n      <Formik\r\n        initialValues={{ title: '', description: '', body: '', tagList: [] }}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"title\"><span className=\"form-label\">Title</span>\r\n              <Field type=\"text\" name=\"title\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"title\" component=\"div\" className=\"form-error\" />\r\n  \r\n            <label htmlFor=\"description\"><span className=\"form-label\">Description</span>\r\n              <Field type=\"text\" name=\"description\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"description\" component=\"div\" className=\"form-error\"/>\r\n\r\n            <label htmlFor=\"body\"><span className=\"form-label\">Body</span>\r\n              <Field name=\"body\" className=\"form-textarea\" as=\"textarea\" />\r\n            </label>\r\n            <ErrorMessage name=\"description\" component=\"div\" className=\"form-error\"/>\r\n\r\n            <label htmlFor=\"tagList\"><span className=\"form-label\">Tags</span>\r\n              <Field type=\"text\" name=\"tagList\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"tagList\" component=\"div\" className=\"form-error\"/>\r\n            \r\n            {props.isSubmitting ? (\r\n                <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Create \r\n            </button>\r\n              )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Col>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nAddArticle.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  thunkCreateArticle:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsArticle)(withRouter(AddArticle));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Spin, Col, Button } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { actionCreatorsArticle } from '../Store/actions';\r\n\r\nconst validSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"You must enter title\"),\r\n  description: Yup.string()\r\n    .required(\"You must enter description\"),\r\n  body: Yup.string()\r\n  .required(\"You must enter description\"),\r\n});\r\n\r\nconst EditArticle = (props) => {\r\n  const { thunkUpdateArticle } = props;\r\n  const { title, description, body, tagList, slug } = props.currentArticle;\r\n\r\n  const closeButton = (evt) => {\r\n    evt.preventDefault();\r\n    const { history } = props;\r\n    history.push('/blog');\r\n  }\r\n\r\n  const submitForm = async (values, { setSubmitting, setFieldError, resetForm }) => {\r\n    try {\r\n      await thunkUpdateArticle(slug, values);\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n    finally {\r\n      setSubmitting(false);\r\n      resetForm();\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Col xs={22} md={12} xl={6} className=\"form-wrapper\">\r\n       <Button className=\"btn-close\" shape=\"circle\" type=\"primary\" onClick={closeButton}>x</Button>\r\n      <h2 className=\"form-header\">Change Article</h2>\r\n      <Formik\r\n        initialValues={{ title, description, body, tagList:tagList.join(' ')}}\r\n        validationSchema={validSchema}\r\n        onSubmit={submitForm}\r\n      >\r\n        {props => (\r\n          <Form onSubmit={props.handleSubmit}>\r\n            <label htmlFor=\"title\"><span className=\"form-label\">Title</span>\r\n              <Field type=\"text\" name=\"title\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"title\" component=\"div\" className=\"form-error\" />\r\n  \r\n            <label htmlFor=\"description\"><span className=\"form-label\">Description</span>\r\n              <Field type=\"text\" name=\"description\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"description\" component=\"div\" className=\"form-error\"/>\r\n\r\n            <label htmlFor=\"body\"><span className=\"form-label\">Body</span>\r\n              <Field name=\"body\" className=\"form-textarea\" as=\"textarea\" />\r\n            </label>\r\n            <ErrorMessage name=\"description\" component=\"div\" className=\"form-error\"/>\r\n\r\n            <label htmlFor=\"tagList\"><span className=\"form-label\">Tags</span>\r\n              <Field type=\"text\" name=\"tagList\" className=\"form-input\" />\r\n            </label>\r\n            <ErrorMessage name=\"tagList\" component=\"div\" className=\"form-error\"/>\r\n            \r\n            {props.isSubmitting ? (\r\n                <Spin />\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn-primary\">\r\n              Edit \r\n            </button>\r\n              )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Col>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n    currentArticle: state.currentArticle,\r\n  }\r\n};\r\n\r\nEditArticle.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  currentArticle: PropTypes.object.isRequired,\r\n  thunkUpdateArticle : PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreatorsArticle)(withRouter(EditArticle));\r\n","import App from './App';\n\nexport default App;\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ProtectedRoute, canActivate, ProtectedRouteRederict }from '../ProtectedRoute'; \r\nimport Loader from '../Loader';\r\nimport { HomePage, HomePageNotAuth } from '../HomePage';\r\nimport LoginPage from '../LoginPage';\r\nimport RegisterPage from '../RegisterPage';\r\nimport { ListArticles, FullArticle, AddArticleButton, AddArticle, EditArticleButton, EditArticle, } from '../Articles';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\n\r\nconst App = (props) => {\r\n  const { isLoggedIn } = props;\r\n  const reverse = true;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Loader>\r\n        <ProtectedRoute path=\"/blog\" componentAuth={HomePage} componentNotAuth={HomePageNotAuth} isRoutingAllowed={canActivate(isLoggedIn)}/>\r\n        <ProtectedRoute exact path=\"/blog\" componentAuth={AddArticleButton} componentNotAuth={()=>null} isRoutingAllowed={canActivate(isLoggedIn)} />\r\n        <ProtectedRoute exact path=\"/blog/articles/:slug\" componentAuth={EditArticleButton} componentNotAuth={()=>null}  isRoutingAllowed={canActivate(isLoggedIn)} />\r\n        <ProtectedRouteRederict path=\"/blog/signin\" component={LoginPage} addresToRedirect={'/blog'} isRoutingAllowed={canActivate(isLoggedIn, reverse)} />\r\n        <ProtectedRouteRederict path=\"/blog/signup\" component={RegisterPage} addresToRedirect={'/blog'} isRoutingAllowed={canActivate(isLoggedIn, reverse)} />\r\n        <Route path=\"/blog\" exact component={ListArticles} />\r\n        <Route exact path=\"/blog/articles/:slug\" render={({match}) => (<FullArticle slug={match.params.slug}/>)} />\r\n        <ProtectedRouteRederict path=\"/blog/add\" component={AddArticle} addresToRedirect={'/blog'} isRoutingAllowed={canActivate(isLoggedIn)} />\r\n        <ProtectedRouteRederict path=\"/blog/articles/:slug/edit\" component={EditArticle} addresToRedirect={'/blog'} isRoutingAllowed={canActivate(isLoggedIn)} />\r\n        <Switch>\r\n          <Redirect to={'/blog'} />\r\n        </Switch>\r\n      </Loader>\r\n      </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n  }\r\n};\r\n\r\nApp.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport {\r\n  changeStateToSignIn,\r\n  changeStateToSignOut,\r\n  addArticlesList,\r\n  addArticle,\r\n  favoriteArticle,\r\n  deleteFavoriteArticle,\r\n} from './actions';\r\n\r\nconst isLoggedIn = handleActions(\r\n  {\r\n    [changeStateToSignIn]: () => {\r\n      return true;\r\n    },\r\n    [changeStateToSignOut]: () => {\r\n      return false;\r\n    },\r\n  },\r\n  false\r\n);\r\n\r\nconst user = handleActions(\r\n  {\r\n    [changeStateToSignIn]: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nconst articlesList = handleActions(\r\n  {\r\n    [addArticlesList]: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n    [favoriteArticle]: (state, { payload }) => {\r\n      return state.reduce(\r\n        (acc, el) => (el.slug === payload.slug ? [...acc, payload] : [...acc, el]),\r\n        []\r\n      );\r\n    },\r\n    [deleteFavoriteArticle]: (state, { payload }) => {\r\n      return state.reduce(\r\n        (acc, el) => (el.slug === payload.slug ? [...acc, payload] : [...acc, el]),\r\n        []\r\n      );\r\n    },\r\n  },\r\n  []\r\n);\r\n\r\nconst currentArticle = handleActions(\r\n  {\r\n    [addArticle]: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n    [favoriteArticle]: (state, { payload }) => {\r\n      return { ...state, favorited: payload.favorited, favoritesCount: payload.favoritesCount };\r\n    },\r\n    [deleteFavoriteArticle]: (state, { payload }) => {\r\n      return { ...state, favorited: payload.favorited, favoritesCount: payload.favoritesCount };\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default combineReducers({\r\n  isLoggedIn,\r\n  user,\r\n  articlesList,\r\n  currentArticle,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport Store from './Store';\r\n\r\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}